buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.0'

}
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven'
apply plugin: 'idea'

group 'reprodcase'
version '1.0-SNAPSHOT'
setDescription("GRPCCLientTEst")
sourceCompatibility = 1.8
mainClassName='io.vertx.core.Launcher'
shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Command': 'CertServer'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}


repositories {
    mavenCentral()
}

def protobufDep = 'com.google.protobuf:protobuf-java:3.3.1'

dependencies {// The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile protobufDep
    compile "io.vertx:vertx-grpc:3.4.2"
    compile "io.vertx:vertx-core:3.4.2"
    testCompile "io.vertx:vertx-unit:3.4.2"
    compile "com.google.guava:guava:23.0"
    compile "ch.qos.logback:logback-core:1.1.8"
    compile "ch.qos.logback:logback-classic:1.1.8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

protobuf {
    generatedFilesBaseDir = "$projectDir/gen"

    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        grpc {
            artifact = "io.vertx:protoc-gen-grpc-java:1.3.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
        // If you have additional sourceSets and/or codegen plugins, add all of them
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc");
    }
}